name: "deeptau_ensemble"
platform: "ensemble"
max_batch_size: 0
input [
  {
    name: "input_tau"
    data_type: TYPE_FP32
    dims: [-1, 47]
  },
  {
    name: "input_inner_egamma"
    data_type: TYPE_FP32
    dims: [ -1, 1, 1, 86 ]
  },
  {
    name: "input_inner_muon"
    data_type: TYPE_FP32
    dims: [ -1, 1, 1, 64 ]
  },
  {
    name: "input_inner_hadrons"
    data_type: TYPE_FP32
    dims: [ -1, 1, 1, 38 ]
  },  
  {
    name: "input_outer_egamma"
    data_type: TYPE_FP32
    dims: [ -1, 1, 1, 86 ]
  },
  {
    name: "input_outer_muon"
    data_type: TYPE_FP32
    dims: [ -1, 1, 1, 64 ]
  },
  {
    name: "input_outer_hadrons"
    data_type: TYPE_FP32
    dims: [ -1, 1, 1, 38 ]
  },
  {
    name: "input_inner_pos"
    data_type: TYPE_INT64
    dims: [-1, 3]
  },
  {
    name: "input_outer_pos"
    data_type: TYPE_INT64
    dims: [-1, 3]
  }
]
output [
  {
    name: "main_output/Softmax"
    data_type: TYPE_FP32
    dims: [ -1, 4 ]
  }
]

ensemble_scheduling {
 step [
   {
     model_name: "deeptau_inner"
     model_version: -1
     input_map {
        key: 'input_inner_egamma'
        value: 'input_inner_egamma'
     }
     input_map {
        key: 'input_inner_muon'
        value: 'input_inner_muon'
     }
     input_map {
        key: 'input_inner_hadrons'
        value: 'input_inner_hadrons'
     }
     output_map {
        key: 'inner_all_dropout_4/Identity'
        value: 'inner_all_dropout_4/Identity'
     }
   },
   {
     model_name: "deeptau_outer",
     model_version: -1
     input_map {
        key: 'input_outer_egamma'
        value: 'input_outer_egamma'
     }
     input_map {
        key: 'input_outer_muon'
        value: 'input_outer_muon'
     }
     input_map {
        key: 'input_outer_hadrons'
        value: 'input_outer_hadrons'
     }
     output_map {
        key: 'outer_all_dropout_4/Identity'
        value: 'outer_all_dropout_4/Identity'
     }
   },
   {
     model_name: "deeptau_python",
     model_version: -1
     input_map {
        key: 'input_tau'
        value: 'input_tau'
     }
     input_map {
        key: 'input_inner_forconv'
        value: 'inner_all_dropout_4/Identity'
     }
     input_map {
        key: 'input_outer_forconv'
        value: 'outer_all_dropout_4/Identity'
     }
     input_map {
        key: 'input_inner_pos'
        value: 'input_inner_pos'
     }
     input_map {
        key: 'input_outer_pos'
        value: 'input_outer_pos'
     }
     output_map {
        key: 'output_tau'
        value: 'output_tau'
     }
     output_map {
        key: 'output_inner'
        value: 'output_inner'
     }
     output_map {
        key: 'output_outer'
        value: 'output_outer'
     }
   },
   {
     model_name: "deeptau_core"
     model_version: -1
     input_map {
        key: 'input_tau'
        value: 'output_tau'
     }
     input_map {
        key: 'input_inner'
        value: 'output_inner'
     }
     input_map {
        key: 'input_outer'
        value: 'output_outer'
     }
     output_map {
        key: 'main_output/Softmax'
        value: 'main_output/Softmax'
     }
   }
 ]
}
